#install.packages('data.table')
library(data.table)
library(stringr)
#install.packages('ggplot2')
library(ggplot2)
library(gridExtra)
library(grid)
library(plyr)
library(purrr)
library(dplyr)
#install.packages('flextable')
library(flextable)
library(tibble)
library(ComplexHeatmap)
library(RColorBrewer)
library(ggplotify)
library(here)
# Load all AGP data
AGP <- read.csv(here("01_tidy_data", "AGP_all.csv.gz"), header = TRUE, sep = ",")
# Load healthy samples' table
all_healthy <- read.csv(here("01_tidy_data", "AGP_healthy.csv.gz"), header = TRUE, sep = ",")
all_healthy <- select(all_healthy, sample_id, shannon_entropy, chao1, menhinick, margalef, fisher_alpha, simpson, pielou_evenness, gini_index, strong, simpson, faith_pd, sex, race, host_age)
all_healthy$condition <- 'healthy'
all_healthy$qiita_study_id <- AGP$qiita_study_id[match(all_healthy$sample_id, AGP$sample_id)]
names(all_healthy)[names(all_healthy) == 'host_age'] <- 'age'
all_IBD <- read.csv(here("01_tidy_data", "IBD_all.csv.gz"), header = TRUE, sep = ",")
CD_2 <- read.csv(here("01_tidy_data", "all_CD_2.csv.gz"), header = TRUE, sep = ",")
C_diff_trans <- read.csv(here("01_tidy_data", "all_C_diff_trans.csv.gz"), header = TRUE, sep = ",")
trans_IBD_CDI <- read.csv(here("01_tidy_data", "all_trans_IBD_CDI.csv.gz"), header = TRUE, sep = ",")
metric <- c("shannon_entropy", "chao1", "menhinick", "margalef", "fisher_alpha", "simpson", "gini_index", "strong", "pielou_evenness", "faith_pd" )
plot_violin <- function(df, column){
violin <- vector('list', length(metric))
for (i in 1:length(metric)){
mean_line <- df %>% dplyr::group_by(.data[[column]]) %>% dplyr::summarise(grp_mean=mean(.data[[metric[i]]]))
plot_data <- df %>% dplyr::group_by(.data[[column]]) %>% dplyr::mutate(m = mean(.data[[metric[i]]]))
violin[[i]] <- plot_data %>% ggplot(aes(x = .data[[metric[i]]], y = reorder(.data[[column]], -m), color = .data[[column]], fill = .data[[column]])) +
geom_violin()+
geom_boxplot(width=0.1, color="grey", alpha=0.2) +
geom_vline(data = mean_line, aes(xintercept = grp_mean, color = .data[[column]]), linetype = "dashed")+
labs(x = metric[i])+
ylab("")+
theme(legend.position="none")
if(metric[i] != "shannon_entropy" & metric[i] != "strong" & metric[i] != "gini_index"  & metric[i] != "menhinick"){
violin[[i]] <- violin[[i]] +
scale_x_continuous(trans = 'log10') +
xlab(paste(metric[i], "(log10)", sep = " "))
}
}
return(violin)
}
do_wilcox_test <- function(df, column){
test <- list()
for (i in 1:length(metric)){
test[[i]] <- pairwise.wilcox.test(df[[metric[i]]], df[[column]], p.adjust.method="none") %>%
broom::tidy() %>% add_column(parameter = metric[i], .before='group1')
test[[i]]$p.value <- round(test[[i]]$p.value, digits = 17)
}
tests <- do.call(what = rbind, args = test)
return(tests)
}
#merge two datasets
healthy_disease <-  rbind.fill(all_healthy, all_IBD)
healthy_disease$condition <- as.factor(healthy_disease$condition)
healthy_disease$condition <- relevel(healthy_disease$condition, "healthy")
table(healthy_disease$condition)
nrow(healthy_disease)
qual_col_pals <- brewer.pal.info[brewer.pal.info$category == 'qual',]
colors <- unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))
histo_IBD <- vector('list', length(metric))
for (i in 1:length(metric)){
histo_IBD[[i]] <- all_IBD %>% ggplot(aes(x = .data[[metric[i]]])) +
geom_histogram(aes(y=..density..), colour="black", fill="white", bins=30)+
geom_density(alpha=.2, fill=colors[i]) +
xlab(label = metric[i]) +
ylab(label = "density")
}
grid.arrange(histo_IBD[[1]], histo_IBD[[2]],histo_IBD[[3]], histo_IBD[[4]],histo_IBD[[5]], histo_IBD[[6]],histo_IBD[[7]], histo_IBD[[8]],histo_IBD[[9]], histo_IBD[[10]], ncol=3, top = textGrob("Distributions of 1) Shannon's index  2) Chao1 3) Menhinick's index \n4) Margalef's index 5) Fisher's index 6) Simpson 7) Gini index 8) Strong's index 9) Pielou's evenness \nand 10) Faith's PD in IBD datasets", gp=gpar(fontsize=10,font=2)))
histo_healthy <- vector('list', length(metric))
for (i in 1:length(metric)){
histo_healthy[[i]] <- all_healthy %>% ggplot(aes(x = .data[[metric[i]]])) +
geom_histogram(aes(y=..density..), colour="black", fill="white", bins=30)+
geom_density(alpha=.2, fill=colors[i]) +
xlab(label = metric[i]) +
ylab(label = "density")
}
grid.arrange(histo_healthy[[1]], histo_healthy[[2]], histo_healthy[[3]], histo_healthy[[4]], histo_healthy[[5]], histo_healthy[[6]], histo_healthy[[7]], histo_healthy[[8]], histo_healthy[[9]], histo_IBD[[10]], ncol=3, top = textGrob("Distributions of 1) Shannon's index  2) Chao1 3) Menhinick's index \n4) Margalef's index 5) Fisher's index 6) Simpson 7) Gini index 8) Strong's index 9) Pielou's evenness \nand 10) Faith's PD in healthy dataset", gp=gpar(fontsize=10,font=2)))
density <- vector('list', length(metric))
box <- vector('list', length(metric))
for (i in 1:length(metric)){
mean_line <- healthy_disease %>% dplyr::group_by(condition) %>% dplyr::summarise(grp_mean=mean(.data[[metric[i]]]))
density[[i]] <- healthy_disease %>% ggplot(aes(x = .data[[metric[i]]], color = condition)) +
geom_density()+
geom_vline(data = mean_line, aes(xintercept = grp_mean, color = condition), linetype = "dashed")+
labs(x = metric[i])
box[[i]] <- healthy_disease %>% ggplot(aes(x = .data[[metric[i]]], color = condition)) +
geom_boxplot() +
labs(x = metric[i])
if(metric[i] != "shannon_entropy" & metric[i] !="strong" & metric[i] != "gini_index" &  metric[i] != "menhinick"){
density [[i]] <- density [[i]] +
scale_x_continuous(trans = 'log10') +
xlab(paste(metric[i], "(log10)", sep = " "))
box [[i]] <- box [[i]] +
scale_x_continuous(trans = 'log10') +
xlab(paste(metric[i], "(log10)", sep = " "))
}
}
# Show plots
for (j in 1:length(metric)){
grid.arrange(density[[j]], box[[j]], ncol=2, top = paste("Density and box plot comparing healthy vs diseases data for metric:", metric[j], sep=" "))
}
violin_IBD <- vector('list', length(metric))
# Use violin function
violin_IBD <- plot_violin(healthy_disease, "condition")
grid.arrange(violin_IBD[[1]], violin_IBD[[2]],violin_IBD[[3]], violin_IBD[[4]],violin_IBD[[5]], violin_IBD[[6]],violin_IBD[[7]], violin_IBD[[8]],violin_IBD[[9]], violin_IBD[[10]], ncol=4, top = textGrob("Distributions of 1) Shannon's index  2) Chao1 3) Menhinick's index \n4) Margalef's index 5) Fisher's index 6) Simpson 7) Gini index 8) Strong's index 9) Pielou's evenness \nand 10) Faith's PD in IBD datasets", gp=gpar(fontsize=10,font=2)))
tests_IBD <- list()
tests_IBD <- do_wilcox_test(healthy_disease, "condition")
table1 <- tests_IBD %>%
add_column(p.adjusted = p.adjust(tests_IBD$p.value, "fdr"), .after='p.value') %>%
flextable() %>%
bold(~ p.value < 0.05, 4) %>%
bold(~ p.adjusted < 0.05, 5) %>%
add_header_lines(values = "Results of the Wilcox test for distributions of different conditions")
table2 <- tests_IBD %>%
add_column(p.adjusted = p.adjust(tests_IBD$p.value, "fdr"), .after='p.value') %>%
arrange(p.value)  %>%
flextable() %>%
bold(~ p.value < 0.05, 4) %>%
bold(~ p.adjusted < 0.05, 5) %>%
add_header_lines(values = "Results of the Wilcox test for distributions of different conditions")
table1
table2
wilcox_healthy_disease <- healthy_disease %>%
summarise(Shannon = wilcox.test(shannon_entropy[condition == "healthy"], shannon_entropy[condition != "healthy"])$p.value,
Chao1 = wilcox.test(chao1[condition == "healthy"], chao1[condition != "healthy"])$p.value,
Menhinick = wilcox.test(menhinick[condition == "healthy"], menhinick[condition != "healthy"])$p.value,
Margalef = wilcox.test(margalef[condition == "healthy"], margalef[condition != "healthy"])$p.value,
Pielou = wilcox.test(pielou_evenness[condition == "healthy"], pielou_evenness[condition != "healthy"])$p.value,
Fisher = wilcox.test(fisher_alpha[condition == "healthy"], fisher_alpha[condition != "healthy"])$p.value,
Gini = wilcox.test(gini_index[condition == "healthy"], gini_index[condition != "healthy"])$p.value,
Strong = wilcox.test(strong[condition == "healthy"], strong[condition != "healthy"])$p.value,
Faith = wilcox.test(faith_pd[condition == "healthy"], faith_pd[condition != "healthy"])$p.value)
wilcox_healthy_disease <- t(wilcox_healthy_disease)
colnames(wilcox_healthy_disease) <- c("p.value")
wilcox_healthy_disease <- data.frame(Alpha_Metric = row.names(wilcox_healthy_disease), wilcox_healthy_disease)
wilcox_healthy_disease$p.value <- round(wilcox_healthy_disease$p.value, digits = 17)
wilcox_healthy_disease %>%
add_column(p.adjusted = p.adjust(wilcox_healthy_disease$p.value, "fdr"), .after='p.value') %>%
flextable() %>%
bold(~ p.value < 0.05, 2) %>%
bold(~ p.adjusted < 0.05, 3) %>%
add_header_lines(values = "Results of the Wilcox test for distributions of different parameters between healthy and unhealthy samples")
kruskal_results <- healthy_disease %>%
summarise(Shannon = kruskal.test(healthy_disease$shannon_entropy ~ healthy_disease$condition)$p.value,
Chao1 = kruskal.test(healthy_disease$chao1 ~ healthy_disease$condition)$p.value,
Fisher = kruskal.test(healthy_disease$fisher_alpha ~ healthy_disease$condition)$p.value,
Margalef =kruskal.test(healthy_disease$margalef ~ healthy_disease$condition)$p.value,
Simpson = kruskal.test(healthy_disease$simpson ~ healthy_disease$condition)$p.value,
Menhinick = kruskal.test(healthy_disease$menhinick ~ healthy_disease$condition)$p.value,
Pielou = kruskal.test(healthy_disease$pielou_evenness ~ healthy_disease$condition)$p.value,
Gini = kruskal.test(healthy_disease$gini_index ~ healthy_disease$condition)$p.value,
Strong = kruskal.test(healthy_disease$strong ~ healthy_disease$condition)$p.value,
Faith = kruskal.test(healthy_disease$faith_pd ~ healthy_disease$condition)$p.value)
kruskal_results <- as.data.frame(t(kruskal_results))
colnames(kruskal_results) <- c("p.value")
kruskal_results <- data.frame(Alpha_Metric = row.names(kruskal_results), kruskal_results)
kruskal_results$p.value <- round(kruskal_results$p.value, digits = 17)
kruskal_results %>%
add_column(p.adjusted = p.adjust(kruskal_results$p.value, "fdr"), .after='p.value') %>%
flextable() %>%
bold(~ p.value < 0.05, 2) %>%
bold(~ p.adjusted < 0.05, 3) %>%
add_header_lines(values = "Results of the Kruskal-Wallis test for differentiation of different parameters across different conditions")
table(CD_2$description, CD_2$condition)
table(CD_2$condition)
table(CD_2$surgery_and_ibd)
violin_CD_2a <- vector('list', length(metric))
# Use violin function
violin_CD_2a <- plot_violin(CD_2, "condition")
grid.arrange(violin_CD_2a[[1]], violin_CD_2a[[2]], violin_CD_2a[[3]], violin_CD_2a[[4]], violin_CD_2a[[5]], violin_CD_2a[[6]], violin_CD_2a[[7]],  violin_CD_2a[[9]], violin_CD_2a[[10]], ncol=4, top = textGrob("Distributions of 1) Shannon's index  2) Chao1 3) Menhinick's index \n4) Margalef's index 5) Fisher's index 6) Simpson 7) Gini index 8) Strong's index 9) Pielou's evenness \nand 10) Faith's PD in longitudinal CD datasets", gp=gpar(fontsize=10,font=2)))
violin_CD_2b <- vector('list', length(metric))
# Use violin function
violin_CD_2b <- plot_violin(CD_2, "surgery_and_ibd")
#violin_CD_2b
grid.arrange(violin_CD_2b[[1]], violin_CD_2b[[2]], violin_CD_2b[[3]], violin_CD_2b[[4]], violin_CD_2b[[5]], violin_CD_2b[[6]], violin_CD_2b[[7]], violin_CD_2b[[8]], violin_CD_2b[[9]], violin_CD_2b[[10]], ncol=3)
violin_CD_2_surg <- vector('list', length(metric))
# Use violin function
violin_CD_2_surg <- plot_violin(CD_2, "surgery_type")
violin_CD_2_surg
CD_1 <- healthy_disease[healthy_disease$condition != "UC",]
CD_2_surg <- CD_2
CD_2_surg$condition <- NULL
names(CD_2_surg)[names(CD_2_surg) == 'surgery_and_ibd'] <- 'condition'
#CD_check <- rbind.fill(CD_1, CD_2)
CD_check <- rbind.fill(CD_1, CD_2_surg)
CD_check$condition[CD_check$condition == "CD"] <-'CD_1'
CD_check$condition[CD_check$condition == "crohns"] <-'CD_2'
CD_check$condition[CD_check$condition == "crohns (surgery)"] <-'CD_2_surgery'
CD_check$condition[CD_check$condition == "healthy"] <-'control(AGP)'
CD_check$condition[CD_check$condition == "control"] <-'control_2'
violin_CD_check <- vector('list', length(metric))
# Use violin function
violin_CD_check <- plot_violin(CD_check, "condition")
violin_CD_check
test_CD_1 <- list()
test_CD_2 <- list()
test_CD_1 <- do_wilcox_test(CD_1, "condition")
test_CD_2 <- do_wilcox_test(CD_2, "surgery_and_ibd")
table_CD_1 <- test_CD_1 %>%
add_column(p.adjusted = p.adjust(test_CD_1$p.value, "fdr"), .after='p.value') %>%
arrange(p.value, parameter)  %>%
flextable() %>%
bold(~ p.value < 0.05, 4) %>%
bold(~ p.adjusted < 0.05, 5) %>%
add_header_lines(values = "Results of the Wilcox test for distributions of different conditions in CD_1 dataset")
table_CD_2 <- test_CD_2 %>%
add_column(p.adjusted = p.adjust(test_CD_2$p.value, "fdr"), .after='p.value') %>%
arrange(p.value, parameter)  %>%
flextable() %>%
bold(~ p.value < 0.05, 4) %>%
bold(~ p.adjusted < 0.05, 5) %>%
add_header_lines(values = "Results of the Wilcoxon test for distributions of different conditions in CD_2 dataset")
table_CD_1
table_CD_2
CD_check_w <- CD_check %>% filter(CD_check$condition != "control(AGP)" & CD_check$condition != "control_2" )
test_CD_3 <- list()
test_CD_3 <- do_wilcox_test(CD_check_w, "condition")
table_CD_3 <- test_CD_3 %>%
add_column(p.adjusted = p.adjust(test_CD_3$p.value, "fdr"), .after='p.value') %>%
arrange(p.value, parameter)  %>%
flextable() %>%
bold(~ p.value < 0.05, 4) %>%
bold(~ p.adjusted < 0.05, 5) %>%
add_header_lines(values = "Results of the Wilcox test for distributions of different groups of Crhohn's disease patients")
table_CD_3
table(C_diff_trans$disease_state)
table(C_diff_trans$day_since_fmt)
table(C_diff_trans$animations_subject)
C_diff_trans$animations_subject[C_diff_trans$animations_subject == "CD1"] <-'subject_1'
C_diff_trans$animations_subject[C_diff_trans$animations_subject == "CD2"] <-'subject_2'
C_diff_trans$animations_subject[C_diff_trans$animations_subject == "CD3"] <-'subject_3'
C_diff_trans$animations_subject[C_diff_trans$animations_subject == "CD4"] <-'subject_4'
progression <- vector('list', length(metric))
for (i in 1:length(metric)){
progression[[i]] <- C_diff_trans %>% ggplot(aes(x=day_since_fmt, y= .data[[metric[i]]], group=animations_subject)) +
geom_line(aes(color=animations_subject))+
geom_point(aes(color=animations_subject))+
facet_wrap(vars(animations_subject), scale="free", ncol=2)
}
progression
table(trans_IBD_CDI$condition)
table(trans_IBD_CDI$day_since_fmt)
trans_IBD_CDI_1 <- trans_IBD_CDI %>%
filter(day_since_fmt != "no_data" ) %>%
filter(!(donor_or_patient == "Donor" & condition=="CDI"))
trans_IBD_CDI_1$day_since_fmt <- as.factor(trans_IBD_CDI_1$day_since_fmt)
violin_trans <- vector('list', length(metric))
for (i in 1:length(metric)){
mean_line <- trans_IBD_CDI_1 %>% dplyr::group_by(condition, day_since_fmt) %>% dplyr::summarise(grp_mean = mean(.data[[metric[i]]]))
violin_trans[[i]] <- trans_IBD_CDI_1 %>%
mutate(across(day_since_fmt, factor, levels=c("-1","7","28","NA-Donor"))) %>%
ggplot(aes(x = .data[[metric[i]]], y = condition, color = condition, fill = condition)) +
geom_violin()+
geom_boxplot(width=0.1, color="grey", alpha=0.2) +
geom_vline(data = mean_line, aes(xintercept = grp_mean, color = condition), linetype = "dashed")+
labs(x = metric[i])+
ylab("") +
facet_wrap(vars(day_since_fmt), nrow=1)+
theme(legend.position="none")
if(metric[i] != "shannon_entropy" & metric[i] !="strong" & metric[i] != "gini_index"  &  metric[i] != "menhinick"){
violin_trans [[i]] <- violin_trans [[i]] +
scale_x_continuous(trans = 'log10') +
xlab(paste(metric[i], "(log10)", sep = " "))
}
}
#plots for Shannon entropy
violin_trans
cond <- c("CDI + UC", "CDI", "CDI + CD")
test_CDI_trans <- list()
table <- list()
for (i in 1:length(cond)){
trans_IBD_CDI_2 <- trans_IBD_CDI_1 %>%
filter(condition == cond[i])
test_CDI_trans <- do_wilcox_test(trans_IBD_CDI_2, "day_since_fmt")
table <- test_CDI_trans %>%
add_column(p.adjusted = p.adjust(test_CDI_trans$p.value, "fdr"), .after='p.value') %>%
flextable() %>%
bold(~ p.value < 0.05, 4) %>%
bold(~ p.adjusted < 0.05, 5) %>%
add_header_lines(values = paste("Results of the Wilcox test for condition:", cond[i], sep = " "))
print(table)
test_CDI_trans <- list()
}
before_trans <- trans_IBD_CDI %>%
filter(day_since_fmt != c("7","28", "no_data", "NA-Donor"),
condition != "Donors")
CD_2_merge <- CD_2 %>%
filter(condition != "not applicable")
CD_2_merge$condition[CD_2_merge$condition=="control"] <- "healthy"
CD_2_merge$condition[CD_2_merge$condition=="crohns"] <- "CD"
healthy_disease_2 <- rbind.fill(healthy_disease, before_trans, CD_2_merge)
# Sizes of each dataset
table(healthy_disease_2$condition)
ggplot(healthy_disease_2, aes(x = faith_pd)) +
geom_histogram(aes(y=..density..), colour="black", fill="white", bins=30) +
geom_density (alpha=.2, fill="#009E73") +
xlab(label = "faith_pd") +
ylab(label = "density") +
scale_x_continuous(trans = 'log10') +
facet_wrap(vars(condition), scales = "free_y")
violin_all <- vector('list', length(metric))
violin_all <- plot_violin(healthy_disease_2, "condition")
violin_all
test_all <- list()
test_all <- do_wilcox_test(healthy_disease_2, "condition")
table1 <- test_all %>%
add_column(p.adjusted = p.adjust(test_all$p.value, "fdr"), .after='p.value') %>%
arrange(p.value, parameter)  %>%
flextable() %>%
bold(~ p.value < 0.05, 4) %>%
bold(~ p.adjusted < 0.05, 5) %>%
add_header_lines(values = "Results of the Wilcox test for distributions of different conditions")
table2 <- test_all %>%
add_column(p.adjusted = p.adjust(test_all$p.value, "fdr"), .after='p.value') %>%
arrange(parameter, group1)  %>%
flextable() %>%
bold(~ p.value < 0.05, 4) %>%
bold(~ p.adjusted < 0.05, 5) %>%
add_header_lines(values = "Results of the Wilcox test for distributions of different conditions")
#table1
#table2
# Do Wilcox test to see which parameters show significant differenc between healthy and unhealthy samples
wilcox_p_value <- healthy_disease_2 %>%
summarise(Shannon = wilcox.test(shannon_entropy[condition == "healthy"], shannon_entropy[condition != "healthy"])$p.value,
Chao1 = wilcox.test(chao1[condition == "healthy"], chao1[condition != "healthy"])$p.value,
Menhinick = wilcox.test(menhinick[condition == "healthy"], menhinick[condition != "healthy"])$p.value,
Margalef = wilcox.test(margalef[condition == "healthy"], margalef[condition != "healthy"])$p.value,
Simpson = wilcox.test(simpson[condition == "healthy"], simpson[condition != "healthy"])$p.value,
Fisher = wilcox.test(fisher_alpha[condition == "healthy"], fisher_alpha[condition != "healthy"])$p.value,
Pielou = wilcox.test(pielou_evenness[condition == "healthy"], pielou_evenness[condition != "healthy"])$p.value,
Gini = wilcox.test(gini_index[condition == "healthy"], gini_index[condition != "healthy"])$p.value,
Strong = wilcox.test(strong[condition == "healthy"], strong[condition != "healthy"])$p.value,
Faith = wilcox.test(faith_pd[condition == "healthy"], faith_pd[condition != "healthy"])$p.value)
wilcox_p_value <- t(wilcox_p_value)
colnames(wilcox_p_value) <- c("p.value")
wilcox_p_value <- data.frame(Alpha_Metric = row.names(wilcox_p_value), wilcox_p_value)
wilcox_p_value$p.value <- round(wilcox_p_value$p.value, digits = 17)
wilcox_p_value %>%
flextable() %>%
bold(~ p.value < 0.05, 2) %>%
add_header_lines(values = "Results of the Wilcox test for distributions of different parameters between healthy and unhealthy samples")
library(readxl)
#install.packages("randomForest")
library(randomForest)
#install.packages("varImp")
library(caret)
healthy_disease_2$condition <- as.factor(healthy_disease_2$condition)
#Random Forest Modelling
model <- randomForest(condition ~ shannon_entropy + chao1 + menhinick + margalef + fisher_alpha + simpson + gini_index + strong + pielou_evenness + faith_pd, data = healthy_disease_2, importance=TRUE)
importance(model)
varImpPlot(model)
#Conditional=True, adjusts for correlations between predictors.
i_scores <- caret::varImp(model, conditional = TRUE)
#Gathering rownames in 'var'  and converting it to the factor
#to provide 'fill' parameter for the bar chart.
i_scores <- i_scores %>% tibble::rownames_to_column("var")
i_scores$var<- i_scores$var %>% as.factor()
#Plotting the bar and polar charts for comparing variables
for (cathegory in levels(healthy_disease_2$condition)){
i_bar <- i_scores %>% ggplot(aes(x = .data[[cathegory]], y=reorder(var, .data[[cathegory]]), fill = var)) +
geom_bar(stat = "identity", show.legend = FALSE, width = 1) +
labs(x = NULL, y = NULL, title = paste("Feature importance for condition category:", cathegory, sep =" "))+
theme_minimal()
plot(i_bar)
}
i_scores
i_bar
#Plotting the bar and polar charts for comparing variables
for (cathegory in levels(healthy_disease_2$condition)){
i_bar <- i_scores %>% ggplot(aes(x = .data[[cathegory]], y=reorder(var, .data[[cathegory]]), fill = var)) +
geom_bar(stat = "identity", show.legend = FALSE, width = 1) +
labs(x = NULL, y = NULL, title = paste("Feature importance for condition category:", cathegory, sep =" "))+
theme_minimal()
plot(i_bar)
}
source("05_functions/make_reports.R")
report("02_R_scripts/Data_preparation.Rmd", n_file = "1")
report("02_R_scripts/Healthy_data_analysis.Rmd", "2")
report("02_R_scripts/Compare_datasets.Rmd", "3")
gc()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
#install.packages('purrr')
library(purrr)
library(tibble)
library(ggplot2)
library(stringr)
library(RColorBrewer)
library(gridExtra)
library(grid)
#install.packages("here")
library(here)
#names(trans_IBD_CDI)[names(trans_IBD_CDI) == 'sample_name'] <- 'sample_id'
# Load .tsv.gz files from inflammatory bowel disease analysis
shannon_hosp_CDI <- read.delim(here("00_raw_data/06_hospital_CDI", "shannon_hosp_CDI.tsv.gz"))
chao1_hosp_CDI <- read.delim(here("00_raw_data/06_hospital_CDI", "chao1_hosp_CDI.tsv.gz"))
fisher_hosp_CDI <- read.delim(here("00_raw_data/06_hospital_CDI", "fisher_hosp_CDI.tsv.gz"))
margalef_hosp_CDI <- read.delim(here("00_raw_data/06_hospital_CDI", "margalef_hosp_CDI.tsv.gz"))
simpson_hosp_CDI <- read.delim(here("00_raw_data/06_hospital_CDI", "simpson_hosp_CDI.tsv.gz"))
gini_hosp_CDI <- read.delim(here("00_raw_data/06_hospital_CDI", "gini_hosp_CDI.tsv.gz"))
menhinick_hosp_CDI <- read.delim(here("00_raw_data/06_hospital_CDI", "menhinick_hosp_CDI.tsv.gz"))
strong_hosp_CDI <- read.delim(here("00_raw_data/06_hospital_CDI", "strong_hosp_CDI.tsv.gz"))
faith_hosp_CDI <- read.delim(here("00_raw_data/06_hospital_CDI", "faith_hosp_CDI.tsv.gz"))
pielou_hosp_CDI <- read.delim(here("00_raw_data/06_hospital_CDI", "pielou_hosp_CDI.tsv.gz"))
names(faith_trans_IBD_CDI)[names(faith_trans_IBD_CDI) == 'X.SampleID'] <- 'X'
shannon_hosp_CDI <- read.delim(here("00_raw_data/06_hospital_CDI", "shannon_hosp_CDI.tsv.gz"))
chao1_hosp_CDI <- read.delim(here("00_raw_data/06_hospital_CDI", "chao1_hosp_CDI.tsv.gz"))
fisher_hosp_CDI <- read.delim(here("00_raw_data/06_hospital_CDI", "fisher_hosp_CDI.tsv.gz"))
margalef_hosp_CDI <- read.delim(here("00_raw_data/06_hospital_CDI", "margalef_hosp_CDI.tsv.gz"))
simpson_hosp_CDI <- read.delim(here("00_raw_data/06_hospital_CDI", "simpson_hosp_CDI.tsv.gz"))
gini_hosp_CDI <- read.delim(here("00_raw_data/06_hospital_CDI", "gini_hosp_CDI.tsv.gz"))
menhinick_hosp_CDI <- read.delim(here("00_raw_data/06_hospital_CDI", "menhinick_hosp_CDI.tsv.gz"))
strong_hosp_CDI <- read.delim(here("00_raw_data/06_hospital_CDI", "strong_hosp_CDI.tsv.gz"))
faith_hosp_CDI <- read.delim(here("00_raw_data/06_hospital_CDI", "faith_hosp_CDI.tsv.gz"))
pielou_hosp_CDI <- read.delim(here("00_raw_data/06_hospital_CDI", "pielou_hosp_CDI.tsv.gz"))
View(chao1_hosp_CDI)
View(faith_hosp_CDI)
View(fisher_hosp_CDI)
View(gini_hosp_CDI)
View(margalef_hosp_CDI)
View(menhinick_hosp_CDI)
View(pielou_hosp_CDI)
View(shannon_hosp_CDI)
#put all data frames into list
all_trans_hosp_CDI <- list(shannon_trans_hosp_CDI, chao1_trans_hosp_CDI, fisher_trans_hosp_CDI, margalef_trans_hosp_CDI, gini_trans_hosp_CDI, menhinick_trans_hosp_CDI, strong_trans_hosp_CDI, simpson_trans_hosp_CDI, faith_trans_hosp_CDI, pielou_trans_hosp_CDI)
#put all data frames into list
all_hosp_CDI <- list(shannon_hosp_CDI, chao1_hosp_CDI, fisher_hosp_CDI, margalef_hosp_CDI, gini_hosp_CDI, menhinick_hosp_CDI, strong_hosp_CDI, simpson_hosp_CDI, faith_hosp_CDI, pielou_hosp_CDI)
View(all_hosp_CDI)
#merge all data frames together
all_hosp_CDI <- all_hosp_CDI %>% reduce(inner_join, by="X")
View(all_hosp_CDI)
shannon_hosp_CDI <- read.delim(here("00_raw_data/06_hospital_CDI", "shannon_hosp_CDI.tsv.gz"))
chao1_hosp_CDI <- read.delim(here("00_raw_data/06_hospital_CDI", "chao1_hosp_CDI.tsv.gz"))
fisher_hosp_CDI <- read.delim(here("00_raw_data/06_hospital_CDI", "fisher_hosp_CDI.tsv.gz"))
margalef_hosp_CDI <- read.delim(here("00_raw_data/06_hospital_CDI", "margalef_hosp_CDI.tsv.gz"))
simpson_hosp_CDI <- read.delim(here("00_raw_data/06_hospital_CDI", "simpson_hosp_CDI.tsv.gz"))
gini_hosp_CDI <- read.delim(here("00_raw_data/06_hospital_CDI", "gini_hosp_CDI.tsv.gz"))
menhinick_hosp_CDI <- read.delim(here("00_raw_data/06_hospital_CDI", "menhinick_hosp_CDI.tsv.gz"))
strong_hosp_CDI <- read.delim(here("00_raw_data/06_hospital_CDI", "strong_hosp_CDI.tsv.gz"))
faith_hosp_CDI <- read.delim(here("00_raw_data/06_hospital_CDI", "faith_hosp_CDI.tsv.gz"))
pielou_hosp_CDI <- read.delim(here("00_raw_data/06_hospital_CDI", "pielou_hosp_CDI.tsv.gz"))
#put all data frames into list
all_hosp_CDI <- list(shannon_hosp_CDI, chao1_hosp_CDI, fisher_hosp_CDI, margalef_hosp_CDI, gini_hosp_CDI, menhinick_hosp_CDI, strong_hosp_CDI, simpson_hosp_CDI, faith_hosp_CDI, pielou_hosp_CDI)
#merge all data frames together
all_hosp_CDI <- all_hosp_CDI %>% reduce(inner_join, by="X")
names(all_hosp_CDI)[names(all_hosp_CDI) == 'X'] <- 'sample_id'
View(all_hosp_CDI)
write.csv(all_hosp_CDI, gzfile(here("01_tidy_data", "all_hosp_CDI.csv.gz")), row.names=FALSE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE, echo = TRUE)
#install.packages("readr")
library("readr")
#install.packages('data.table')
library(data.table)
library(stringr)
#install.packages('ggplot2')
library(ggplot2)
library(gridExtra)
library(grid)
library(plyr)
library(purrr)
library(dplyr)
#install.packages('flextable')
library(flextable)
library(tibble)
library(ComplexHeatmap)
library(RColorBrewer)
library(ggplotify)
library(here)
# Load all AGP data
AGP <- read.csv(here("01_tidy_data", "AGP_all.csv.gz"), header = TRUE, sep = ",")
#install.packages("readr")
library("readr")
#install.packages('data.table')
library(data.table)
library(stringr)
#install.packages('ggplot2')
library(ggplot2)
library(gridExtra)
library(grid)
library(plyr)
library(purrr)
library(dplyr)
#install.packages('flextable')
library(flextable)
library(tibble)
library(ComplexHeatmap)
library(RColorBrewer)
library(ggplotify)
library(here)
# Load all AGP data
AGP <- read.csv(here("01_tidy_data", "AGP_all.csv.gz"), header = TRUE, sep = ",")
# Load healthy samples' table
all_healthy <- read.csv(here("01_tidy_data", "AGP_healthy.csv.gz"), header = TRUE, sep = ",")
all_IBD <- read.csv(here("01_tidy_data", "IBD_all.csv.gz"), header = TRUE, sep = ",")
library(here)
# Load all AGP data
AGP <- read.csv(here("01_tidy_data", "AGP_all.csv.gz"), header = TRUE, sep = ",")
AGP <- read.delim(here("01_tidy_data", "AGP_all.csv.gz"))
AGP <- read.delim(here("01_tidy_data", "AGP_all.csv.gz"))
setwd("~/Desktop/master_project/Master-Project-Natasa-Mortvanski")
AGP <- read.delim(here("01_tidy_data", "AGP_all.csv.gz"))
# Load .tsv.gz files from inflammatory bowel disease analysis
shannon_hosp_CDI <- read.delim(here("00_raw_data/06_hospital_CDI", "shannon_hosp_CDI.tsv.gz"))
